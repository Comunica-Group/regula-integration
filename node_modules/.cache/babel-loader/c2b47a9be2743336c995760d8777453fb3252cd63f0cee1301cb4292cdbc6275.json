{"ast":null,"code":"import React,{Component}from'react';import{connect}from'react-redux';import{initialize}from'./actions';import logo from'./logo.svg';import'./app.css';import{defineComponents,DocumentReaderService}from'@regulaforensics/vp-frontend-document-components';import{DocumentReaderApi,Result,Scenario,Source,TextFieldType,GraphicFieldType,Light,SecurityFeatureType}from'@regulaforensics/document-reader-webclient';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const{PORTRAIT,DOCUMENT_FRONT}=GraphicFieldType;const{DOCUMENT_NUMBER,GIVEN_NAMES,SURNAME}=TextFieldType;const regula_license=process.env.REACT_APP_REGULA_LICENSE;const apiBasePath=process.env.REACT_APP_BASE_PATH;class App extends Component{componentDidMount(){this.props.initialize();window.RegulaDocumentSDK=new DocumentReaderService();defineComponents().then(()=>window.RegulaDocumentSDK.initialize({license:regula_license}));const component=document.querySelector('document-reader');async function listener(event){if(event.detail.action==='PROCESS_FINISHED'&&event.detail.data.status===1){const response=event.detail.data.response;const image_container=response.lowLvlResponse.ContainerList.List[0].RawImageContainer;const image_format=image_container.format;const image=image_container.image;const api=new DocumentReaderApi({basePath:apiBasePath});api.setLicense(regula_license);const serverInfo=await api.ping();const request={images:[{ImageData:image,light:Light.WHITE,page_idx:0}],processParam:{scenario:Scenario.FULL_AUTH,resultTypeOutput:[// actual results\nResult.STATUS,Result.AUTHENTICITY,Result.TEXT,Result.IMAGES,Result.DOCUMENT_TYPE,Result.DOCUMENT_TYPE_CANDIDATES,Result.IMAGE_QUALITY,// legacy results\nResult.MRZ_TEXT,Result.VISUAL_TEXT,Result.BARCODE_TEXT,Result.RFID_TEXT,Result.VISUAL_GRAPHICS,Result.BARCODE_GRAPHICS,Result.RFID_GRAPHICS,Result.LEXICAL_ANALYSIS]}};const responseProcessed=await api.process(request);const requestJson=JSON.stringify(request);const responseJson=responseProcessed.json();const docOverallStatus=responseProcessed.status.overallStatus;const docOpticalTextStatus=responseProcessed.status.detailsOptical.text;const docNumberField=responseProcessed.text.getField(DOCUMENT_NUMBER);const docNameField=responseProcessed.text.getField(GIVEN_NAMES);const docNumberFieldByName=responseProcessed.text.getFieldByName('Document Number');const docNamesField=responseProcessed.text.getFieldByName('Given Names');const docLastNamesField=responseProcessed.text.getFieldByName('Surname');const docNumberVisual=docNumberField.getValue(Source.VISUAL);const Name=docNameField.getValue(Source.TEXT);const LastName=docLastNamesField.getValue(Source.TEXT);const docNumberMrz=docNumberField.getValue(Source.MRZ);const docNumberVisualValidity=docNumberField.sourceValidity(Source.VISUAL);const docNumberMrzValidity=docNumberField.sourceValidity(Source.MRZ);const docNumberMrzVisualMatching=docNumberField.crossSourceComparison(Source.MRZ,Source.VISUAL);const docAuthenticity=responseProcessed.authenticity();const docImagePattern=docAuthenticity.imagePatternChecks();const docImagePatternBlankChecks=docImagePattern.checksByElement(SecurityFeatureType.BLANK);const documentImage=responseProcessed.images.getField(DOCUMENT_FRONT).getValue();const portraitField=responseProcessed.images.getField(PORTRAIT);const portraitFromVisual=portraitField.getValue(Source.VISUAL);// Here you should handle saving files, possibly using browser APIs\nconsole.log('Document Image:',documentImage);console.log('Portrait:',portraitFromVisual);const docImageQuality=responseProcessed.imageQualityChecks();console.log('-----------------------------------------------------------------');console.log(\"            Web API version: \".concat(serverInfo.version));console.log('-----------------------------------------------------------------');console.log(\"           Document Overall Status: \".concat(docOverallStatus));console.log(\"            Document Number Visual: \".concat(docNumberVisual));console.log(\"            Given Name: \".concat(Name));console.log(\"            Last Name: \".concat(LastName));console.log(\"               Document Number MRZ: \".concat(docNumberMrz));console.log(\"Validity Of Document Number Visual: \".concat(docNumberVisualValidity));console.log(\"   Validity Of Document Number MRZ: \".concat(docNumberMrzValidity));console.log(\"      MRZ-Visual values comparison: \".concat(docNumberMrzVisualMatching));console.log('-----------------------------------------------------------------');}}// Add the event listener to the 'document-reader' element\ncomponent.addEventListener('document-reader',listener);// Add the recognizerProcessParam to the RegulaDocumentSDK\nwindow.RegulaDocumentSDK.recognizerProcessParam={processParam:{returnUncroppedImage:true,scenario:'MrzAndLocate',multipageProcessing:false,returnPackageForReprocess:false,timeout:20000,resultTypeOutput:['TextDataResult'],imageQa:{expectedPass:['dpiThreshold','glaresCheck','focusCheck'],dpiThreshold:130,glaresCheck:true,glaresCheckParams:{imgMarginPart:0.05,maxGlaringPart:0.01}}}};}render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Comunica Regula Integration\"})}),/*#__PURE__*/_jsx(\"document-reader\",{\"start-screen\":true})]});}}function mapStateToProps(state){return state;}export default connect(mapStateToProps,{initialize})(App);","map":{"version":3,"names":["React","Component","connect","initialize","logo","defineComponents","DocumentReaderService","DocumentReaderApi","Result","Scenario","Source","TextFieldType","GraphicFieldType","Light","SecurityFeatureType","jsx","_jsx","jsxs","_jsxs","PORTRAIT","DOCUMENT_FRONT","DOCUMENT_NUMBER","GIVEN_NAMES","SURNAME","regula_license","process","env","REACT_APP_REGULA_LICENSE","apiBasePath","REACT_APP_BASE_PATH","App","componentDidMount","props","window","RegulaDocumentSDK","then","license","component","document","querySelector","listener","event","detail","action","data","status","response","image_container","lowLvlResponse","ContainerList","List","RawImageContainer","image_format","format","image","api","basePath","setLicense","serverInfo","ping","request","images","ImageData","light","WHITE","page_idx","processParam","scenario","FULL_AUTH","resultTypeOutput","STATUS","AUTHENTICITY","TEXT","IMAGES","DOCUMENT_TYPE","DOCUMENT_TYPE_CANDIDATES","IMAGE_QUALITY","MRZ_TEXT","VISUAL_TEXT","BARCODE_TEXT","RFID_TEXT","VISUAL_GRAPHICS","BARCODE_GRAPHICS","RFID_GRAPHICS","LEXICAL_ANALYSIS","responseProcessed","requestJson","JSON","stringify","responseJson","json","docOverallStatus","overallStatus","docOpticalTextStatus","detailsOptical","text","docNumberField","getField","docNameField","docNumberFieldByName","getFieldByName","docNamesField","docLastNamesField","docNumberVisual","getValue","VISUAL","Name","LastName","docNumberMrz","MRZ","docNumberVisualValidity","sourceValidity","docNumberMrzValidity","docNumberMrzVisualMatching","crossSourceComparison","docAuthenticity","authenticity","docImagePattern","imagePatternChecks","docImagePatternBlankChecks","checksByElement","BLANK","documentImage","portraitField","portraitFromVisual","console","log","docImageQuality","imageQualityChecks","concat","version","addEventListener","recognizerProcessParam","returnUncroppedImage","multipageProcessing","returnPackageForReprocess","timeout","imageQa","expectedPass","dpiThreshold","glaresCheck","glaresCheckParams","imgMarginPart","maxGlaringPart","render","className","children","mapStateToProps","state"],"sources":["/home/regula-integration/src/app.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initialize } from './actions';\nimport logo from './logo.svg';\nimport './app.css';\nimport { defineComponents, DocumentReaderService } from '@regulaforensics/vp-frontend-document-components';\nimport { DocumentReaderApi, Result, Scenario, Source, TextFieldType, GraphicFieldType, Light,SecurityFeatureType } from '@regulaforensics/document-reader-webclient';\n\nconst { PORTRAIT, DOCUMENT_FRONT } = GraphicFieldType;\nconst { DOCUMENT_NUMBER, GIVEN_NAMES, SURNAME } = TextFieldType;\n\nconst regula_license = process.env.REACT_APP_REGULA_LICENSE;\nconst apiBasePath = process.env.REACT_APP_BASE_PATH;\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initialize();\n\n    window.RegulaDocumentSDK = new DocumentReaderService();\n    defineComponents().then(() => window.RegulaDocumentSDK.initialize({ license: regula_license }));\n\n    const component = document.querySelector('document-reader');\n\n    async function listener(event) {\n      if (event.detail.action === 'PROCESS_FINISHED' && event.detail.data.status === 1) {\n        const response = event.detail.data.response;\n        const image_container = response.lowLvlResponse.ContainerList.List[0].RawImageContainer;\n        const image_format = image_container.format;\n        const image = image_container.image;\n        const api = new DocumentReaderApi({ basePath: apiBasePath });\n\n        api.setLicense(regula_license);\n        const serverInfo = await api.ping();\n        const request = {\n          images: [\n              {\n                  ImageData: image,\n                  light: Light.WHITE,\n                  page_idx: 0,\n              },\n          ],\n          processParam: {\n              scenario: Scenario.FULL_AUTH,\n              resultTypeOutput: [\n                  // actual results\n                  Result.STATUS,\n                  Result.AUTHENTICITY,\n                  Result.TEXT,\n                  Result.IMAGES,\n                  Result.DOCUMENT_TYPE,\n                  Result.DOCUMENT_TYPE_CANDIDATES,\n                  Result.IMAGE_QUALITY,\n                  // legacy results\n                  Result.MRZ_TEXT,\n                  Result.VISUAL_TEXT,\n                  Result.BARCODE_TEXT,\n                  Result.RFID_TEXT,\n                  Result.VISUAL_GRAPHICS,\n                  Result.BARCODE_GRAPHICS,\n                  Result.RFID_GRAPHICS,\n                  Result.LEXICAL_ANALYSIS,\n              ],\n          },\n      };\n\n      const responseProcessed = await api.process(request);\n      const requestJson = JSON.stringify(request);\n      const responseJson = responseProcessed.json();\n\n      const docOverallStatus = responseProcessed.status.overallStatus;\n      const docOpticalTextStatus = responseProcessed.status.detailsOptical.text;\n\n      const docNumberField = responseProcessed.text.getField(DOCUMENT_NUMBER);\n      const docNameField = responseProcessed.text.getField(GIVEN_NAMES);\n      const docNumberFieldByName = responseProcessed.text.getFieldByName('Document Number');\n      const docNamesField = responseProcessed.text.getFieldByName('Given Names');\n      const docLastNamesField = responseProcessed.text.getFieldByName('Surname');\n\n      const docNumberVisual = docNumberField.getValue(Source.VISUAL);\n      const Name = docNameField.getValue(Source.TEXT);\n      const LastName = docLastNamesField.getValue(Source.TEXT);\n      const docNumberMrz = docNumberField.getValue(Source.MRZ);\n      const docNumberVisualValidity = docNumberField.sourceValidity(Source.VISUAL);\n      const docNumberMrzValidity = docNumberField.sourceValidity(Source.MRZ);\n      const docNumberMrzVisualMatching = docNumberField.crossSourceComparison(Source.MRZ, Source.VISUAL);\n\n      const docAuthenticity = responseProcessed.authenticity();\n\n      const docImagePattern = docAuthenticity.imagePatternChecks();\n      const docImagePatternBlankChecks = docImagePattern.checksByElement(SecurityFeatureType.BLANK);\n\n      const documentImage = responseProcessed.images.getField(DOCUMENT_FRONT).getValue();\n      const portraitField = responseProcessed.images.getField(PORTRAIT);\n      const portraitFromVisual = portraitField.getValue(Source.VISUAL);\n      // Here you should handle saving files, possibly using browser APIs\n      console.log('Document Image:', documentImage);\n      console.log('Portrait:', portraitFromVisual);\n\n      const docImageQuality = responseProcessed.imageQualityChecks();\n\n      console.log('-----------------------------------------------------------------');\n      console.log(`            Web API version: ${serverInfo.version}`);\n      console.log('-----------------------------------------------------------------');\n      console.log(`           Document Overall Status: ${docOverallStatus}`);\n      console.log(`            Document Number Visual: ${docNumberVisual}`);\n      console.log(`            Given Name: ${Name}`);\n      console.log(`            Last Name: ${LastName}`);\n      console.log(`               Document Number MRZ: ${docNumberMrz}`);\n      console.log(`Validity Of Document Number Visual: ${docNumberVisualValidity}`);\n      console.log(`   Validity Of Document Number MRZ: ${docNumberMrzValidity}`);\n      console.log(`      MRZ-Visual values comparison: ${docNumberMrzVisualMatching}`);\n      console.log('-----------------------------------------------------------------');\n\n      }\n    }\n\n    // Add the event listener to the 'document-reader' element\n    component.addEventListener('document-reader', listener);\n\n    // Add the recognizerProcessParam to the RegulaDocumentSDK\n    window.RegulaDocumentSDK.recognizerProcessParam = {\n      processParam: {\n        returnUncroppedImage: true,\n        scenario: 'MrzAndLocate',\n        multipageProcessing: false,\n        returnPackageForReprocess: false,\n        timeout: 20000,\n        resultTypeOutput: ['TextDataResult'],\n        imageQa: {\n          expectedPass: ['dpiThreshold', 'glaresCheck', 'focusCheck'],\n          dpiThreshold: 130,\n          glaresCheck: true,\n          glaresCheckParams: {\n            imgMarginPart: 0.05,\n            maxGlaringPart: 0.01,\n          },\n        },\n      },\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>Comunica Regula Integration</h2>\n        </div>\n        <document-reader start-screen></document-reader>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nexport default connect(mapStateToProps, { initialize })(App);\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}