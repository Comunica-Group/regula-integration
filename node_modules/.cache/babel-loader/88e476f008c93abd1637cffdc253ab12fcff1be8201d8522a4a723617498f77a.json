{"ast":null,"code":"var _jsxFileName = \"/Users/estebansamayoa/regula-integration/src/app.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initialize } from './actions';\nimport comunica from './comunica.png';\nimport './app.css';\nimport { defineComponents, DocumentReaderService } from '@regulaforensics/vp-frontend-document-components';\nimport { DocumentReaderApi, Result, Scenario, Source, TextFieldType, GraphicFieldType, Light, SecurityFeatureType } from '@regulaforensics/document-reader-webclient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PORTRAIT,\n  DOCUMENT_FRONT\n} = GraphicFieldType;\nconst {\n  DOCUMENT_NUMBER,\n  GIVEN_NAMES,\n  SURNAME\n} = TextFieldType;\nconst regula_license = process.env.REACT_APP_REGULA_LICENSE;\nconst apiBasePath = process.env.REACT_APP_BASE_PATH;\nclass App extends Component {\n  componentDidMount() {\n    this.props.initialize();\n    window.RegulaDocumentSDK = new DocumentReaderService();\n    defineComponents().then(() => window.RegulaDocumentSDK.initialize({\n      license: regula_license\n    }));\n    const component = document.querySelector('document-reader');\n    async function listener(event) {\n      if (event.detail.action === 'PROCESS_FINISHED' && event.detail.data.status === 1) {\n        const response = event.detail.data.response;\n        const image_container = response.lowLvlResponse.ContainerList.List[0].RawImageContainer;\n        const image_format = image_container.format;\n        const image = image_container.image;\n        const api = new DocumentReaderApi({\n          basePath: apiBasePath\n        });\n        api.setLicense(regula_license);\n        const serverInfo = await api.ping();\n        const request = {\n          images: [{\n            ImageData: image,\n            light: Light.WHITE,\n            page_idx: 0\n          }],\n          processParam: {\n            scenario: Scenario.FULL_AUTH,\n            resultTypeOutput: [\n            // actual results\n            Result.STATUS, Result.AUTHENTICITY, Result.TEXT, Result.IMAGES, Result.DOCUMENT_TYPE, Result.DOCUMENT_TYPE_CANDIDATES, Result.IMAGE_QUALITY,\n            // legacy results\n            Result.MRZ_TEXT, Result.VISUAL_TEXT, Result.BARCODE_TEXT, Result.RFID_TEXT, Result.VISUAL_GRAPHICS, Result.BARCODE_GRAPHICS, Result.RFID_GRAPHICS, Result.LEXICAL_ANALYSIS]\n          }\n        };\n        const responseProcessed = await api.process(request);\n        const requestJson = JSON.stringify(request);\n        const responseJson = responseProcessed.json();\n        const docOverallStatus = responseProcessed.status.overallStatus;\n        const docOpticalTextStatus = responseProcessed.status.detailsOptical.text;\n        const docNumberField = responseProcessed.text.getField(DOCUMENT_NUMBER);\n        const docNameField = responseProcessed.text.getField(GIVEN_NAMES);\n        const docNumberFieldByName = responseProcessed.text.getFieldByName('Document Number');\n        const docNamesField = responseProcessed.text.getFieldByName('Given Names');\n        const docLastNamesField = responseProcessed.text.getFieldByName('Surname');\n        const docNumberVisual = docNumberField.getValue(Source.VISUAL);\n        const Name = docNameField.getValue(Source.TEXT);\n        const LastName = docLastNamesField.getValue(Source.TEXT);\n        const docNumberMrz = docNumberField.getValue(Source.MRZ);\n        const docNumberVisualValidity = docNumberField.sourceValidity(Source.VISUAL);\n        const docNumberMrzValidity = docNumberField.sourceValidity(Source.MRZ);\n        const docNumberMrzVisualMatching = docNumberField.crossSourceComparison(Source.MRZ, Source.VISUAL);\n        const docAuthenticity = responseProcessed.authenticity();\n        const docImagePattern = docAuthenticity.imagePatternChecks();\n        const docImagePatternBlankChecks = docImagePattern.checksByElement(SecurityFeatureType.BLANK);\n        const documentImage = responseProcessed.images.getField(DOCUMENT_FRONT).getValue();\n        const portraitField = responseProcessed.images.getField(PORTRAIT);\n        const portraitFromVisual = portraitField.getValue(Source.VISUAL);\n        // Here you should handle saving files, possibly using browser APIs\n        console.log('Document Image:', documentImage);\n        console.log('Portrait:', portraitFromVisual);\n        const docImageQuality = responseProcessed.imageQualityChecks();\n        console.log('-----------------------------------------------------------------');\n        console.log(`            Web API version: ${serverInfo.version}`);\n        console.log('-----------------------------------------------------------------');\n        console.log(`           Document Overall Status: ${docOverallStatus}`);\n        console.log(`            Document Number Visual: ${docNumberVisual}`);\n        console.log(`            Given Name: ${Name}`);\n        console.log(`            Last Name: ${LastName}`);\n        console.log(`               Document Number MRZ: ${docNumberMrz}`);\n        console.log(`Validity Of Document Number Visual: ${docNumberVisualValidity}`);\n        console.log(`   Validity Of Document Number MRZ: ${docNumberMrzValidity}`);\n        console.log(`      MRZ-Visual values comparison: ${docNumberMrzVisualMatching}`);\n        console.log('-----------------------------------------------------------------');\n      }\n    }\n    component.addEventListener('document-reader', listener);\n    window.RegulaDocumentSDK.recognizerProcessParam = {\n      processParam: {\n        returnUncroppedImage: true,\n        scenario: 'MrzAndLocate',\n        multipageProcessing: false,\n        returnPackageForReprocess: false,\n        timeout: 20000,\n        resultTypeOutput: ['TextDataResult'],\n        imageQa: {\n          expectedPass: ['dpiThreshold', 'glaresCheck', 'focusCheck'],\n          dpiThreshold: 130,\n          glaresCheck: true,\n          glaresCheckParams: {\n            imgMarginPart: 0.05,\n            maxGlaringPart: 0.01\n          }\n        }\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comunica,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Comunica Regula Integration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"document-reader\", {\n        \"start-screen\": true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction mapStateToProps(state) {\n  return state;\n}\nexport default connect(mapStateToProps, {\n  initialize\n})(App);","map":{"version":3,"names":["React","Component","connect","initialize","comunica","defineComponents","DocumentReaderService","DocumentReaderApi","Result","Scenario","Source","TextFieldType","GraphicFieldType","Light","SecurityFeatureType","jsxDEV","_jsxDEV","PORTRAIT","DOCUMENT_FRONT","DOCUMENT_NUMBER","GIVEN_NAMES","SURNAME","regula_license","process","env","REACT_APP_REGULA_LICENSE","apiBasePath","REACT_APP_BASE_PATH","App","componentDidMount","props","window","RegulaDocumentSDK","then","license","component","document","querySelector","listener","event","detail","action","data","status","response","image_container","lowLvlResponse","ContainerList","List","RawImageContainer","image_format","format","image","api","basePath","setLicense","serverInfo","ping","request","images","ImageData","light","WHITE","page_idx","processParam","scenario","FULL_AUTH","resultTypeOutput","STATUS","AUTHENTICITY","TEXT","IMAGES","DOCUMENT_TYPE","DOCUMENT_TYPE_CANDIDATES","IMAGE_QUALITY","MRZ_TEXT","VISUAL_TEXT","BARCODE_TEXT","RFID_TEXT","VISUAL_GRAPHICS","BARCODE_GRAPHICS","RFID_GRAPHICS","LEXICAL_ANALYSIS","responseProcessed","requestJson","JSON","stringify","responseJson","json","docOverallStatus","overallStatus","docOpticalTextStatus","detailsOptical","text","docNumberField","getField","docNameField","docNumberFieldByName","getFieldByName","docNamesField","docLastNamesField","docNumberVisual","getValue","VISUAL","Name","LastName","docNumberMrz","MRZ","docNumberVisualValidity","sourceValidity","docNumberMrzValidity","docNumberMrzVisualMatching","crossSourceComparison","docAuthenticity","authenticity","docImagePattern","imagePatternChecks","docImagePatternBlankChecks","checksByElement","BLANK","documentImage","portraitField","portraitFromVisual","console","log","docImageQuality","imageQualityChecks","version","addEventListener","recognizerProcessParam","returnUncroppedImage","multipageProcessing","returnPackageForReprocess","timeout","imageQa","expectedPass","dpiThreshold","glaresCheck","glaresCheckParams","imgMarginPart","maxGlaringPart","render","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state"],"sources":["/Users/estebansamayoa/regula-integration/src/app.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initialize } from './actions';\nimport comunica from './comunica.png';\nimport './app.css';\nimport { defineComponents, DocumentReaderService } from '@regulaforensics/vp-frontend-document-components';\nimport { DocumentReaderApi, Result, Scenario, Source, TextFieldType, GraphicFieldType, Light,SecurityFeatureType } from '@regulaforensics/document-reader-webclient';\n\nconst { PORTRAIT, DOCUMENT_FRONT } = GraphicFieldType;\nconst { DOCUMENT_NUMBER, GIVEN_NAMES, SURNAME } = TextFieldType;\n\nconst regula_license = process.env.REACT_APP_REGULA_LICENSE;\nconst apiBasePath = process.env.REACT_APP_BASE_PATH;\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initialize();\n\n    window.RegulaDocumentSDK = new DocumentReaderService();\n    defineComponents().then(() => window.RegulaDocumentSDK.initialize({ license: regula_license }));\n\n    const component = document.querySelector('document-reader');\n\n    async function listener(event) {\n      if (event.detail.action === 'PROCESS_FINISHED' && event.detail.data.status === 1) {\n        const response = event.detail.data.response;\n        const image_container = response.lowLvlResponse.ContainerList.List[0].RawImageContainer;\n        const image_format = image_container.format;\n        const image = image_container.image;\n        const api = new DocumentReaderApi({ basePath: apiBasePath });\n\n        api.setLicense(regula_license);\n        const serverInfo = await api.ping();\n        const request = {\n          images: [\n              {\n                  ImageData: image,\n                  light: Light.WHITE,\n                  page_idx: 0,\n              },\n          ],\n          processParam: {\n              scenario: Scenario.FULL_AUTH,\n              resultTypeOutput: [\n                  // actual results\n                  Result.STATUS,\n                  Result.AUTHENTICITY,\n                  Result.TEXT,\n                  Result.IMAGES,\n                  Result.DOCUMENT_TYPE,\n                  Result.DOCUMENT_TYPE_CANDIDATES,\n                  Result.IMAGE_QUALITY,\n                  // legacy results\n                  Result.MRZ_TEXT,\n                  Result.VISUAL_TEXT,\n                  Result.BARCODE_TEXT,\n                  Result.RFID_TEXT,\n                  Result.VISUAL_GRAPHICS,\n                  Result.BARCODE_GRAPHICS,\n                  Result.RFID_GRAPHICS,\n                  Result.LEXICAL_ANALYSIS,\n              ],\n          },\n      };\n\n      const responseProcessed = await api.process(request);\n      const requestJson = JSON.stringify(request);\n      const responseJson = responseProcessed.json();\n\n      const docOverallStatus = responseProcessed.status.overallStatus;\n      const docOpticalTextStatus = responseProcessed.status.detailsOptical.text;\n\n      const docNumberField = responseProcessed.text.getField(DOCUMENT_NUMBER);\n      const docNameField = responseProcessed.text.getField(GIVEN_NAMES);\n      const docNumberFieldByName = responseProcessed.text.getFieldByName('Document Number');\n      const docNamesField = responseProcessed.text.getFieldByName('Given Names');\n      const docLastNamesField = responseProcessed.text.getFieldByName('Surname');\n\n      const docNumberVisual = docNumberField.getValue(Source.VISUAL);\n      const Name = docNameField.getValue(Source.TEXT);\n      const LastName = docLastNamesField.getValue(Source.TEXT);\n      const docNumberMrz = docNumberField.getValue(Source.MRZ);\n      const docNumberVisualValidity = docNumberField.sourceValidity(Source.VISUAL);\n      const docNumberMrzValidity = docNumberField.sourceValidity(Source.MRZ);\n      const docNumberMrzVisualMatching = docNumberField.crossSourceComparison(Source.MRZ, Source.VISUAL);\n\n      const docAuthenticity = responseProcessed.authenticity();\n\n      const docImagePattern = docAuthenticity.imagePatternChecks();\n      const docImagePatternBlankChecks = docImagePattern.checksByElement(SecurityFeatureType.BLANK);\n\n      const documentImage = responseProcessed.images.getField(DOCUMENT_FRONT).getValue();\n      const portraitField = responseProcessed.images.getField(PORTRAIT);\n      const portraitFromVisual = portraitField.getValue(Source.VISUAL);\n      // Here you should handle saving files, possibly using browser APIs\n      console.log('Document Image:', documentImage);\n      console.log('Portrait:', portraitFromVisual);\n\n      const docImageQuality = responseProcessed.imageQualityChecks();\n\n      console.log('-----------------------------------------------------------------');\n      console.log(`            Web API version: ${serverInfo.version}`);\n      console.log('-----------------------------------------------------------------');\n      console.log(`           Document Overall Status: ${docOverallStatus}`);\n      console.log(`            Document Number Visual: ${docNumberVisual}`);\n      console.log(`            Given Name: ${Name}`);\n      console.log(`            Last Name: ${LastName}`);\n      console.log(`               Document Number MRZ: ${docNumberMrz}`);\n      console.log(`Validity Of Document Number Visual: ${docNumberVisualValidity}`);\n      console.log(`   Validity Of Document Number MRZ: ${docNumberMrzValidity}`);\n      console.log(`      MRZ-Visual values comparison: ${docNumberMrzVisualMatching}`);\n      console.log('-----------------------------------------------------------------');\n\n      }\n    }\n\n    component.addEventListener('document-reader', listener);\n\n    window.RegulaDocumentSDK.recognizerProcessParam = {\n      processParam: {\n        returnUncroppedImage: true,\n        scenario: 'MrzAndLocate',\n        multipageProcessing: false,\n        returnPackageForReprocess: false,\n        timeout: 20000,\n        resultTypeOutput: ['TextDataResult'],\n        imageQa: {\n          expectedPass: ['dpiThreshold', 'glaresCheck', 'focusCheck'],\n          dpiThreshold: 130,\n          glaresCheck: true,\n          glaresCheckParams: {\n            imgMarginPart: 0.05,\n            maxGlaringPart: 0.01,\n          },\n        },\n      },\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={comunica} alt=\"Logo\" />\n          <h2>Comunica Regula Integration</h2>\n        </div>\n        <document-reader start-screen></document-reader>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nexport default connect(mapStateToProps, { initialize })(App);\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}