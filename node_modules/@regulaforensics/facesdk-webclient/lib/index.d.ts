import { AxiosRequestConfig, AxiosInstance } from "axios";
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
export interface ConfigurationParameters {
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    username?: string;
    password?: string;
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    basePath?: string;
    baseOptions?: any;
    formDataCtor?: new () => any;
}
export class Configuration {
    /**
     * parameter for apiKey security
     * @param name security name
     * @memberof Configuration
     */
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    username?: string;
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    password?: string;
    /**
     * parameter for oauth2 security
     * @param name security name
     * @param scopes oauth2 scope
     * @memberof Configuration
     */
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    /**
     * override base path
     *
     * @type {string}
     * @memberof Configuration
     */
    basePath?: string;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    baseOptions?: any;
    /**
     * The FormData constructor that will be used to create multipart form data
     * requests. You can inject this here so that execution environments that
     * do not support the FormData class can still run the generated client.
     *
     * @type {new () => FormData}
     */
    formDataCtor?: new () => any;
    constructor(param?: ConfigurationParameters);
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    isJsonMime(mime: string): boolean;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The aspect ratio according to which face alignment is performed during face detection.
 * @export
 * @enum {string}
 */
export const FaceImageQualityAlignType: {
    readonly ALIGN_3x4: 0;
    readonly ALIGN_4x5: 1;
    readonly ALIGN_2x3: 2;
    readonly ALIGN_1x1: 3;
    readonly ALIGN_7x9: 4;
};
export type FaceImageQualityAlignType = (typeof FaceImageQualityAlignType)[keyof typeof FaceImageQualityAlignType];
/**
 * Whether to return the Base64 of an aligned and cropped portrait in the crop field.
 * @export
 * @interface Crop
 */
export interface Crop {
    /**
     *
     * @type {FaceImageQualityAlignType}
     * @memberof Crop
     */
    'type'?: FaceImageQualityAlignType;
    /**
     * The RGB value of a color for filling background behind a person\'s silhouette and for aligning the image.
     * @type {Array<number>}
     * @memberof Crop
     */
    'padColor'?: Array<number>;
    /**
     * The resize value in case type matches this value. If it doesn\'t, no resize is done.
     * @type {Array<number>}
     * @memberof Crop
     */
    'size'?: Array<number>;
    /**
     * Whether to return the coordinates of the rectangle with the face in the original image prepared for the face crop.
     * @type {boolean}
     * @memberof Crop
     */
    'returnOriginalRect'?: boolean;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Face attributes.
 * @export
 * @enum {string}
 */
export const FaceAttribute: {
    readonly AGE: "Age";
    readonly EMOTION: "Emotion";
    readonly EYE_LEFT: "EyeLeft";
    readonly EYE_RIGHT: "EyeRight";
    readonly SMILE: "Smile";
    readonly GLASSES: "Glasses";
    readonly HEAD_COVERING: "HeadCovering";
    readonly FOREHEAD_COVERING: "ForeheadCovering";
    readonly MOUTH: "Mouth";
    readonly MEDICAL_MASK: "MedicalMask";
    readonly OCCLUSION: "Occlusion";
    readonly STRONG_MAKEUP: "StrongMakeup";
    readonly HEADPHONES: "Headphones";
};
export type FaceAttribute = (typeof FaceAttribute)[keyof typeof FaceAttribute];
/**
 * The configuration that defines the list of returned quality check characteristics.
 * @export
 * @interface QualityConfig
 */
export interface QualityConfig {
    /**
     *
     * @type {FaceAttribute}
     * @memberof QualityConfig
     */
    'name'?: FaceAttribute;
    /**
     * The range of applicable values for this characteristic. If the returned in the Response value fits this range, the value is identified as compliant with the requirements.
     * @type {Array<number>}
     * @memberof QualityConfig
     */
    'range'?: Array<number>;
}
/**
 * Whether to evaluate attributes, such as age and emotions.
 * @export
 * @interface DetectRequestAttributes
 */
export interface DetectRequestAttributes {
    /**
     *
     * @type {Array<QualityConfig>}
     * @memberof DetectRequestAttributes
     */
    'config'?: Array<QualityConfig>;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Face detection scenario.
 * @export
 * @enum {string}
 */
export const FaceQualityScenarios: {
    readonly OLD_MODE: "OldMode";
    readonly QUALITY_FULL: "QualityFull";
    readonly QUALITY_ICAO: "QualityICAO";
    readonly QUALITY_VISA_SCHENGEN: "QualityVisaSchengen";
    readonly QUALITY_VISA_USA: "QualityVisaUSA";
    readonly CROP_CENTRAL_FACE: "CropCentralFace";
    readonly CROP_ALL_FACES: "CropAllFaces";
    readonly THUMBNAIL: "Thumbnail";
};
export type FaceQualityScenarios = (typeof FaceQualityScenarios)[keyof typeof FaceQualityScenarios];
/**
 * Whether to process the uploaded image according to the indicated settings.
 * @export
 * @interface OutputImageParams
 */
export interface OutputImageParams {
    /**
     * The RGB value of a color for filling background behind a person\'s silhouette and for aligning the image.
     * @type {Array<number>}
     * @memberof OutputImageParams
     */
    'backgroundColor'?: Array<number>;
    /**
     *
     * @type {Crop}
     * @memberof OutputImageParams
     */
    'crop'?: Crop;
}
/**
 * Whether to perform the portrait quality check.
 * @export
 * @interface QualityRequest
 */
export interface QualityRequest {
    /**
     * The RGB value of a color for filling background behind a person\'s silhouette and for aligning the image.
     * @type {Array<number>}
     * @memberof QualityRequest
     */
    'backgroundMatchColor'?: Array<number>;
    /**
     *
     * @type {Array<QualityConfig>}
     * @memberof QualityRequest
     */
    'config'?: Array<QualityConfig>;
}
/**
 * The processing parameters.
 * @export
 * @interface ProcessParam
 */
export interface ProcessParam {
    /**
     *
     * @type {FaceQualityScenarios}
     * @memberof ProcessParam
     */
    'scenario'?: FaceQualityScenarios;
    /**
     * Whether to process only the central face on the image (true) or all the faces (false).
     * @type {boolean}
     * @memberof ProcessParam
     */
    'onlyCentralFace'?: boolean;
    /**
     *
     * @type {OutputImageParams}
     * @memberof ProcessParam
     */
    'outputImageParams'?: OutputImageParams;
    /**
     *
     * @type {QualityRequest}
     * @memberof ProcessParam
     */
    'quality'?: QualityRequest;
    /**
     * Whether to evaluate attributes, such as age and emotions.
     * @type {boolean}
     * @memberof ProcessParam
     */
    'attributes'?: boolean;
}
export type Base64String = string;
export type ImageData = Base64String | ArrayBuffer;
/**
 *
 * @export
 * @interface DetectRequest
 */
export interface DetectRequest {
    /**
     * Session identificator.
     * @type {string}
     * @memberof DetectRequest
     */
    'tag'?: string;
    /**
     *
     * @type {ProcessParam}
     * @memberof DetectRequest
     */
    'processParam'?: ProcessParam;
    /**
     *
     * @type {ImageData}
     * @memberof DetectRequest
     */
    'image'?: ImageData;
    /**
     * Whether to return the cropped portrains with the detected faces.
     * @type {boolean}
     * @memberof DetectRequest
     */
    'thumbnails'?: boolean;
    /**
     *
     * @type {DetectRequestAttributes}
     * @memberof DetectRequest
     */
    'attributes'?: DetectRequestAttributes;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DetectionAttributes
 */
export interface DetectionAttributes {
    /**
     *
     * @type {Array<{ [key: string]: object; }>}
     * @memberof DetectionAttributes
     */
    'details'?: Array<{
        [key: string]: object;
    }>;
    /**
     * The elapsed time for attribute detection.
     * @type {number}
     * @memberof DetectionAttributes
     */
    'elapsedTime'?: number;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * All image characteristics that can be assessed during face image quality assessment.
 * @export
 * @enum {string}
 */
export const FaceQualityConfigName: {
    readonly IMAGE_WIDTH: "ImageWidth";
    readonly IMAGE_HEIGHT: "ImageHeight";
    readonly IMAGE_WIDTH_TO_HEIGHT: "ImageWidthToHeight";
    readonly IMAGE_CHANNELS_NUMBER: "ImageChannelsNumber";
    readonly PADDING_RATIO: "PaddingRatio";
    readonly FACE_MID_POINT_HORIZONTAL_POSITION: "FaceMidPointHorizontalPosition";
    readonly FACE_MID_POINT_VERTICAL_POSITION: "FaceMidPointVerticalPosition";
    readonly HEAD_WIDTH_RATIO: "HeadWidthRatio";
    readonly HEAD_HEIGHT_RATIO: "HeadHeightRatio";
    readonly EYES_DISTANCE: "EyesDistance";
    readonly YAW: "Yaw";
    readonly PITCH: "Pitch";
    readonly ROLL: "Roll";
    readonly BLUR_LEVEL: "BlurLevel";
    readonly NOISE_LEVEL: "NoiseLevel";
    readonly EYE_RIGHT_CLOSED: "EyeRightClosed";
    readonly EYE_LEFT_CLOSED: "EyeLeftClosed";
    readonly EYE_RIGHT_OCCLUDED: "EyeRightOccluded";
    readonly EYE_LEFT_OCCLUDED: "EyeLeftOccluded";
    readonly EYES_RED: "EyesRed";
    readonly EYE_RIGHT_COVERED_WITH_HAIR: "EyeRightCoveredWithHair";
    readonly EYE_LEFT_COVERED_WITH_HAIR: "EyeLeftCoveredWithHair";
    readonly OFF_GAZE: "OffGaze";
    readonly FACE_DYNAMIC_RANGE: "FaceDynamicRange";
    readonly UNNATURAL_SKIN_TONE: "UnnaturalSkinTone";
    readonly TOO_DARK: "TooDark";
    readonly TOO_LIGHT: "TooLight";
    readonly FACE_GLARE: "FaceGlare";
    readonly SHADOWS_ON_FACE: "ShadowsOnFace";
    readonly DARK_GLASSES: "DarkGlasses";
    readonly REFLECTION_ON_GLASSES: "ReflectionOnGlasses";
    readonly FRAMES_TOO_HEAVY: "FramesTooHeavy";
    readonly FACE_OCCLUDED: "FaceOccluded";
    readonly HEAD_COVERING: "HeadCovering";
    readonly BACKGROUND_UNIFORMITY: "BackgroundUniformity";
    readonly SHADOWS_ON_BACKGROUND: "ShadowsOnBackground";
    readonly OTHER_FACES: "OtherFaces";
    readonly SHOULDERS_POSE: "ShouldersPose";
    readonly EXPRESSION_LEVEL: "ExpressionLevel";
    readonly MOUTH_OPEN: "MouthOpen";
    readonly FOREHEAD_COVERING: "ForeheadCovering";
    readonly SMILE: "Smile";
    readonly STRONG_MAKEUP: "StrongMakeup";
    readonly HEADPHONES: "Headphones";
    readonly MEDICAL_MASK: "MedicalMask";
    readonly BACKGROUND_COLOR_MATCH: "BackgroundColorMatch";
    readonly ART_FACE: "ArtFace";
    readonly CONTACT_LENSES: "ContactLenses";
};
export type FaceQualityConfigName = (typeof FaceQualityConfigName)[keyof typeof FaceQualityConfigName];
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Face image quality group types for face image quality assessment.
 * @export
 * @enum {string}
 */
export const FaceImageQualityGroups: {
    readonly IMAGE_CHARACTERISTICS: 1;
    readonly HEAD_SIZE_AND_POSITIONS: 2;
    readonly FACE_QUALITY: 3;
    readonly EYES_CHARACTERISTICS: 4;
    readonly SHADOWS_AND_LIGHTNING: 5;
    readonly POSE_AND_EXPRESSION: 6;
    readonly HEAD_OCCLUSION: 7;
    readonly BACKGROUND: 8;
};
export type FaceImageQualityGroups = (typeof FaceImageQualityGroups)[keyof typeof FaceImageQualityGroups];
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The processing status returned for each assessed quality characteristic.
 * @export
 * @enum {string}
 */
export const FaceImageQualityStatus: {
    readonly QUALITY_STATUS_FALSE: 0;
    readonly QUALITY_STATUS_TRUE: 1;
    readonly QUALITY_STATUS_UNDETERMINED: 2;
};
export type FaceImageQualityStatus = (typeof FaceImageQualityStatus)[keyof typeof FaceImageQualityStatus];
/**
 *
 * @export
 * @interface QualityDetail
 */
export interface QualityDetail {
    /**
     *
     * @type {FaceImageQualityGroups}
     * @memberof QualityDetail
     */
    'groupId'?: FaceImageQualityGroups;
    /**
     *
     * @type {FaceQualityConfigName}
     * @memberof QualityDetail
     */
    'name'?: FaceQualityConfigName;
    /**
     * The range of set values for this characteristic.
     * @type {Array<number>}
     * @memberof QualityDetail
     */
    'range'?: Array<number>;
    /**
     *
     * @type {FaceImageQualityStatus}
     * @memberof QualityDetail
     */
    'status'?: FaceImageQualityStatus;
    /**
     * The assessed value for the characteristic, returned in the set units.
     * @type {number}
     * @memberof QualityDetail
     */
    'value'?: number;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Face image quality group types for face image quality assessment.
 * @export
 * @enum {string}
 */
export const FaceImageQualityGroupsStrings: {
    readonly IMAGE_CHARACTERISTICS: "ImageCharacteristics";
    readonly HEAD_SIZE_AND_POSITIONS: "HeadSizeAndPosition";
    readonly FACE_QUALITY: "FaceQuality";
    readonly EYES_CHARACTERISTICS: "EyesCharacteristics";
    readonly SHADOWS_AND_LIGHTNING: "ShadowsAndLightning";
    readonly POSE_AND_EXPRESSION: "PoseAndExpression";
    readonly HEAD_OCCLUSION: "HeadOcclusion";
    readonly BACKGROUND: "Background";
};
export type FaceImageQualityGroupsStrings = (typeof FaceImageQualityGroupsStrings)[keyof typeof FaceImageQualityGroupsStrings];
/**
 *
 * @export
 * @interface QualityDetailsGroups
 */
export interface QualityDetailsGroups {
    /**
     *
     * @type {FaceImageQualityGroups}
     * @memberof QualityDetailsGroups
     */
    'groupId'?: FaceImageQualityGroups;
    /**
     *
     * @type {FaceImageQualityGroupsStrings}
     * @memberof QualityDetailsGroups
     */
    'name'?: FaceImageQualityGroupsStrings;
    /**
     * The total number of characteristics in the group.
     * @type {number}
     * @memberof QualityDetailsGroups
     */
    'totalCount'?: number;
    /**
     * The number of compliant characteristics in the group.
     * @type {number}
     * @memberof QualityDetailsGroups
     */
    'compliantCount'?: number;
}
/**
 * Field for checking the portrait quality. If it is not mentioned, no quality check is performed.
 * @export
 * @interface DetectionQuality
 */
export interface DetectionQuality {
    /**
     * The array of all the non-compliant assessment characteristics.
     * @type {Array<FaceQualityConfigName>}
     * @memberof DetectionQuality
     */
    'nonCompliant'?: Array<FaceQualityConfigName>;
    /**
     * The array of the assessment results for each group of characteristics.
     * @type {Array<QualityDetailsGroups>}
     * @memberof DetectionQuality
     */
    'detailsGroups'?: Array<QualityDetailsGroups>;
    /**
     * The array of the assessment characteristics that were set in the request.
     * @type {Array<QualityDetail>}
     * @memberof DetectionQuality
     */
    'details'?: Array<QualityDetail>;
    /**
     * Returns the estimated portrait quality assessment result, a number from 0 to 1, where 1 is for absolute compliance.
     * @type {number}
     * @memberof DetectionQuality
     */
    'score'?: number;
    /**
     * The total time the quality assessment has taken.
     * @type {number}
     * @memberof DetectionQuality
     */
    'timer'?: number;
}
/**
 *
 * @export
 * @interface Detection
 */
export interface Detection {
    /**
     *
     * @type {ImageData}
     * @memberof Detection
     */
    'crop'?: ImageData;
    /**
     *
     * @type {DetectionAttributes}
     * @memberof Detection
     */
    'attributes'?: DetectionAttributes;
    /**
     * Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.
     * @type {Array<Array<number>>}
     * @memberof Detection
     */
    'landmarks': Array<Array<number>>;
    /**
     *
     * @type {DetectionQuality}
     * @memberof Detection
     */
    'quality'?: DetectionQuality;
    /**
     * The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.
     * @type {Array<number>}
     * @memberof Detection
     */
    'roi': Array<number>;
    /**
     * Base64 of the cropped portrait.
     * @type {string}
     * @memberof Detection
     */
    'thumbnail'?: string;
}
/**
 *
 * @export
 * @interface DetectResult
 */
export interface DetectResult {
    /**
     *
     * @type {Array<Detection>}
     * @memberof DetectResult
     */
    'detections': Array<Detection>;
    /**
     * Internal.
     * @type {number}
     * @memberof DetectResult
     */
    'detectorType'?: number;
    /**
     * Internal.
     * @type {number}
     * @memberof DetectResult
     */
    'landmarksType'?: number;
    /**
     *
     * @type {FaceQualityScenarios}
     * @memberof DetectResult
     */
    'scenario'?: FaceQualityScenarios;
    /**
     * The total time taken for the detection.
     * @type {number}
     * @memberof DetectResult
     */
    'timer'?: number;
}
/**
 *
 * @export
 * @interface DetectResponseAllOf
 */
export interface DetectResponseAllOf {
    /**
     *
     * @type {DetectResult}
     * @memberof DetectResponseAllOf
     */
    'results'?: DetectResult;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The result code, see enum: https://docs.regulaforensics.com/develop/face-sdk/web-service/development/enums/face-sdk-result-code/
 * @export
 * @enum {string}
 */
export const FaceSDKResultCode: {
    readonly FACER_OK: 0;
    readonly FR_IMAGE_EMPTY: 1;
    readonly FR_FACE_NOT_DETECTED: 2;
    readonly FR_LANDMARKS_NOT_DETECTED: 3;
    readonly FR_FACE_ALIGHNER_FAILED: 4;
    readonly FR_DESCRIPTOR_EXTRACTOR_ERROR: 5;
    readonly FR_IMAGE_DECODE_ERROR: 6;
    readonly FR_INTERNAL_ERROR: 7;
    readonly FACER_CONFIG_ERROR: 199;
    readonly FACER_NO_LICENSE: 200;
    readonly FACER_IS_NOT_INITIALIZED: 201;
    readonly FACER_COMMAND_IS_NOT_SUPPORTED: 202;
    readonly FACER_COMMAND_PARAMS_READ_ERROR: 203;
    readonly FACER_LESS_THAN_TWO_IMAGES_IN_REQUEST: 224;
    readonly FACER_VIDEO_DECODE_ERROR: 227;
    readonly FACER_NOT_ENOUGH_FRAMES: 228;
    readonly FACER_OUTPUT_IS_NOT_DEFINED: 229;
    readonly FACER_CLOSED_EYES_DETECTED: 230;
    readonly FACER_LOW_QUALITY: 231;
    readonly FACER_HIGH_ASYMMETRY: 232;
    readonly FACER_FACE_OVER_EMOTIONAL: 233;
    readonly FACER_SUNGLASSES_DETECTED: 234;
    readonly FACER_SMALL_AGE: 235;
    readonly FACER_HEADDRESS_DETECTED: 236;
    readonly FACER_FACES_NOT_MATCHED: 237;
    readonly FACER_IMAGES_COUNT_LIMIT_EXCEEDED: 238;
    readonly FACER_MEDICINE_MASK_DETECTED: 239;
    readonly FACER_OCCLUSION_DETECTED: 240;
    readonly FACER_FOREHEAD_GLASSES_DETECTED: 242;
    readonly FACER_MOUTH_OPENED: 243;
    readonly FACER_ART_MASK_DETECTED: 244;
    readonly FACER_ELECTRONIC_DEVICE_DETECTED: 245;
    readonly FACER_TRACK_BREAK: 246;
    readonly FACER_WRONG_GEO: 247;
    readonly FACER_WRONG_OF: 248;
    readonly FACER_WRONG_VIEW: 249;
    readonly FACER_TIMEOUT_LIVENESS_TRANSACTION: 250;
    readonly FACER_FAILED_LIVENESS_TRANSACTION: 251;
    readonly FACER_ABORTED_LIVENESS_TRANSACTION: 252;
};
export type FaceSDKResultCode = (typeof FaceSDKResultCode)[keyof typeof FaceSDKResultCode];
/**
 *
 * @export
 * @interface FaceSDKResult
 */
export interface FaceSDKResult {
    /**
     *
     * @type {FaceSDKResultCode}
     * @memberof FaceSDKResult
     */
    'code': FaceSDKResultCode;
}
/**
 * @type DetectResponse
 * @export
 */
export type DetectResponse = DetectResponseAllOf & FaceSDKResult;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DetectionFace
 */
export interface DetectionFace {
    /**
     * The detected face index number.
     * @type {number}
     * @memberof DetectionFace
     */
    'faceIndex'?: number;
    /**
     * Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.
     * @type {Array<Array<number>>}
     * @memberof DetectionFace
     */
    'landmarks'?: Array<Array<number>>;
    /**
     * Angle of rotation of the face from the vertical axis, degrees.
     * @type {number}
     * @memberof DetectionFace
     */
    'rotationAngle'?: number;
    /**
     * The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.
     * @type {Array<number>}
     * @memberof DetectionFace
     */
    'roi'?: Array<number>;
    /**
     * Base64 of the cropped portrait.
     * @type {string}
     * @memberof DetectionFace
     */
    'thumbnail'?: string;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PersonAllOf
 */
export interface PersonAllOf {
    /**
     * Person ID. The list of persons is sorted by decreasing ID value.
     * @type {string}
     * @memberof PersonAllOf
     */
    'id'?: string;
    /**
     * Person creation date.
     * @type {string}
     * @memberof PersonAllOf
     */
    'createdAt'?: string;
    /**
     * Person update date.
     * @type {string}
     * @memberof PersonAllOf
     */
    'updatedAt'?: string;
    /**
     * List of groups this person belongs to.
     * @type {Array<string>}
     * @memberof PersonAllOf
     */
    'groups'?: Array<string>;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Person Request body: name and metadata.
 * @export
 * @interface PersonFields
 */
export interface PersonFields {
    /**
     * Session identificator.
     * @type {string}
     * @memberof PersonFields
     */
    'tag'?: string;
    /**
     * Person name.
     * @type {string}
     * @memberof PersonFields
     */
    'name'?: string;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof PersonFields
     */
    'metadata'?: {
        [key: string]: object;
    };
    /**
     * Groups a person should be placed to. If no group is specified in request, a Default group is created and the person is placed to it.
     * @type {Array<string>}
     * @memberof PersonFields
     */
    'groups'?: Array<string>;
}
/**
 * @type Person
 * Person response body: person ID, creation date, update date if any.
 * @export
 */
export type Person = PersonAllOf & PersonFields;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Image in the response.
 * @export
 * @interface Image
 */
export interface Image {
    /**
     * Response image ID. The list is sorted by decreasing ID value.
     * @type {string}
     * @memberof Image
     */
    'id'?: string;
    /**
     * Original media type of the returned image.
     * @type {string}
     * @memberof Image
     */
    'contentType'?: string;
    /**
     * Returned image creation date.
     * @type {string}
     * @memberof Image
     */
    'createdAt'?: string;
    /**
     * Returned image update date.
     * @type {string}
     * @memberof Image
     */
    'updatedAt'?: string;
    /**
     * Returned image path.
     * @type {string}
     * @memberof Image
     */
    'path'?: string;
    /**
     * Returned image URL.
     * @type {string}
     * @memberof Image
     */
    'url'?: string;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof Image
     */
    'metadata'?: {
        [key: string]: object;
    };
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RecognizeImageAllOf
 */
export interface RecognizeImageAllOf {
    /**
     * Similarity score.
     * @type {number}
     * @memberof RecognizeImageAllOf
     */
    'similarity'?: number;
    /**
     * Similarity distance score: the lower the distance, the higher the face\'s similarity.
     * @type {number}
     * @memberof RecognizeImageAllOf
     */
    'distance'?: number;
}
/**
 * @type RecognizeImage
 * @export
 */
export type RecognizeImage = Image & RecognizeImageAllOf;
/**
 *
 * @export
 * @interface PersonWithImagesAllOf
 */
export interface PersonWithImagesAllOf {
    /**
     *
     * @type {Array<RecognizeImage>}
     * @memberof PersonWithImagesAllOf
     */
    'images'?: Array<RecognizeImage>;
}
/**
 * @type PersonWithImages
 * @export
 */
export type PersonWithImages = Person & PersonWithImagesAllOf;
/**
 *
 * @export
 * @interface FacesResponseAllOf
 */
export interface FacesResponseAllOf {
    /**
     *
     * @type {Array<PersonWithImages>}
     * @memberof FacesResponseAllOf
     */
    'persons'?: Array<PersonWithImages>;
    /**
     *
     * @type {number}
     * @memberof FacesResponseAllOf
     */
    'rotationAngle'?: number;
}
/**
 * @type FacesResponse
 * @export
 */
export type FacesResponse = DetectionFace & FacesResponseAllOf;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Additional group data in the response, includes id and createdAt.
 * @export
 * @interface GroupAllOf
 */
export interface GroupAllOf {
    /**
     * Group ID.
     * @type {string}
     * @memberof GroupAllOf
     */
    'id'?: string;
    /**
     * Group creation date.
     * @type {string}
     * @memberof GroupAllOf
     */
    'createdAt'?: string;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Request body of the group to create data, includes name and metadata.
 * @export
 * @interface GroupToCreate
 */
export interface GroupToCreate {
    /**
     * Session identificator.
     * @type {string}
     * @memberof GroupToCreate
     */
    'tag'?: string;
    /**
     * Group to create name.
     * @type {string}
     * @memberof GroupToCreate
     */
    'name'?: string;
    /**
     * A free-form object containing group\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof GroupToCreate
     */
    'metadata'?: {
        [key: string]: object;
    };
}
/**
 * @type Group
 * @export
 */
export type Group = GroupAllOf & GroupToCreate;
/**
 *
 * @export
 * @interface GroupPageAllOf
 */
export interface GroupPageAllOf {
    /**
     * Array of Groups that are found during the search.
     * @type {Array<Group>}
     * @memberof GroupPageAllOf
     */
    'items'?: Array<Group>;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Information about current page number and total pages count
 * @export
 * @interface Page
 */
export interface Page {
    /**
     * Current page number.
     * @type {number}
     * @memberof Page
     */
    'page'?: number;
    /**
     * Total number of pages.
     * @type {number}
     * @memberof Page
     */
    'totalPages'?: number;
}
/**
 * @type GroupPage
 * @export
 */
export type GroupPage = GroupPageAllOf & Page;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Set to resize the original image.
 * @export
 * @interface ResizeOptions
 */
export interface ResizeOptions {
    /**
     * Resized image width, px.
     * @type {number}
     * @memberof ResizeOptions
     */
    'width'?: number;
    /**
     * Resized image height, px.
     * @type {number}
     * @memberof ResizeOptions
     */
    'height'?: number;
    /**
     * Resized image quality, percent.
     * @type {number}
     * @memberof ResizeOptions
     */
    'quality'?: number;
}
/**
 * Uploaded image.
 * @export
 * @interface ImageFieldsImage
 */
export interface ImageFieldsImage {
    /**
     * Original media type of the uploaded image.
     * @type {string}
     * @memberof ImageFieldsImage
     */
    'contentType'?: string;
    /**
     *
     * @type {ImageData}
     * @memberof ImageFieldsImage
     */
    'content'?: ImageData;
    /**
     * Image URL.
     * @type {string}
     * @memberof ImageFieldsImage
     */
    'imageUrl'?: string;
    /**
     *
     * @type {ResizeOptions}
     * @memberof ImageFieldsImage
     */
    'resizeOptions'?: ResizeOptions;
}
/**
 * Image in the request data, includes image and contentType.
 * @export
 * @interface ImageFields
 */
export interface ImageFields {
    /**
     * Session identificator.
     * @type {string}
     * @memberof ImageFields
     */
    'tag'?: string;
    /**
     *
     * @type {ImageFieldsImage}
     * @memberof ImageFields
     */
    'image'?: ImageFieldsImage;
    /**
     *
     * @type {OutputImageParams}
     * @memberof ImageFields
     */
    'outputImageParams'?: OutputImageParams;
    /**
     * Whether to detect all faces in the image. If set to false, only the most central face is detected.
     * @type {boolean}
     * @memberof ImageFields
     */
    'detectAll'?: boolean;
    /**
     * The similarity threshold.
     * @type {number}
     * @memberof ImageFields
     */
    'threshold'?: number;
    /**
     * The maximum number of results to be returned.
     * @type {number}
     * @memberof ImageFields
     */
    'limit'?: number;
}
/**
 * Image page.
 * @export
 * @interface ImagePageAllOf
 */
export interface ImagePageAllOf {
    /**
     *
     * @type {Array<Image>}
     * @memberof ImagePageAllOf
     */
    'items'?: Array<Image>;
}
/**
 * @type ImagePage
 * @export
 */
export type ImagePage = ImagePageAllOf & Page;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The type of the image, defines the way the comparison is performed. See the enum: https://docs.regulaforensics.com/develop/face-sdk/web-service/development/enums/image-source/
 * @export
 * @enum {string}
 */
export const ImageSource: {
    readonly DOCUMENT_PRINTED: 1;
    readonly DOCUMENT_RFID: 2;
    readonly LIVE: 3;
    readonly DOCUMENT_WITH_LIVE: 4;
    readonly EXTERNAL: 5;
    readonly GHOST: 6;
};
export type ImageSource = (typeof ImageSource)[keyof typeof ImageSource];
/**
 *
 * @export
 * @interface MatchAndSearchRequestAllOfImages
 */
export interface MatchAndSearchRequestAllOfImages {
    /**
     *
     * @type {ImageData}
     * @memberof MatchAndSearchRequestAllOfImages
     */
    'content'?: ImageData;
    /**
     *
     * @type {ImageSource}
     * @memberof MatchAndSearchRequestAllOfImages
     */
    'type'?: ImageSource;
}
/**
 *
 * @export
 * @interface MatchAndSearchRequestAllOf
 */
export interface MatchAndSearchRequestAllOf {
    /**
     * Session identificator.
     * @type {string}
     * @memberof MatchAndSearchRequestAllOf
     */
    'tag'?: string;
    /**
     * Array of Person images.
     * @type {Array<MatchAndSearchRequestAllOfImages>}
     * @memberof MatchAndSearchRequestAllOf
     */
    'images'?: Array<MatchAndSearchRequestAllOfImages>;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * If a person is not found, a new person entry is created using the descriptor calculated while searching.
 * @export
 * @interface SearchParametersCreatePerson
 */
export interface SearchParametersCreatePerson {
    /**
     * Person\'s name.
     * @type {string}
     * @memberof SearchParametersCreatePerson
     */
    'name'?: string;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof SearchParametersCreatePerson
     */
    'metadata'?: {
        [key: string]: object;
    };
}
/**
 * Request search data.
 * @export
 * @interface SearchParameters
 */
export interface SearchParameters {
    /**
     *
     * @type {SearchParametersCreatePerson}
     * @memberof SearchParameters
     */
    'createPerson'?: SearchParametersCreatePerson;
    /**
     * IDs of the groups in which the search is performed.
     * @type {Array<number>}
     * @memberof SearchParameters
     */
    'groupIds'?: Array<number>;
}
/**
 * @type MatchAndSearchRequest
 * @export
 */
export type MatchAndSearchRequest = MatchAndSearchRequestAllOf & SearchParameters;
/**
 *
 * @export
 * @interface MatchAndSearchResponseAllOfDetections
 */
export interface MatchAndSearchResponseAllOfDetections {
    /**
     *
     * @type {Array<FacesResponse>}
     * @memberof MatchAndSearchResponseAllOfDetections
     */
    'faces'?: Array<FacesResponse>;
    /**
     * The image index number. Can be given; if not given, the index numbers are set automatically starting from 0. All index numbers must be whole and unique—not repeated.
     * @type {number}
     * @memberof MatchAndSearchResponseAllOfDetections
     */
    'imageIndex'?: number;
    /**
     *
     * @type {FaceSDKResultCode}
     * @memberof MatchAndSearchResponseAllOfDetections
     */
    'status'?: FaceSDKResultCode;
}
/**
 *
 * @export
 * @interface MatchImageResult
 */
export interface MatchImageResult {
    /**
     * The image index number. Can be given; if not given, the index numbers are set automatically starting from 0. All index numbers must be whole and unique—not repeated.
     * @type {number}
     * @memberof MatchImageResult
     */
    'firstIndex': number;
    /**
     * The detected face index number.
     * @type {number}
     * @memberof MatchImageResult
     */
    'firstFaceIndex'?: number;
    /**
     *
     * @type {ImageSource}
     * @memberof MatchImageResult
     */
    'first'?: ImageSource;
    /**
     * The image index number. Can be given; if not given, the index numbers are set automatically starting from 0. All index numbers must be whole and unique—not repeated.
     * @type {number}
     * @memberof MatchImageResult
     */
    'secondIndex': number;
    /**
     * The detected face index number.
     * @type {number}
     * @memberof MatchImageResult
     */
    'secondFaceIndex'?: number;
    /**
     *
     * @type {ImageSource}
     * @memberof MatchImageResult
     */
    'second'?: ImageSource;
    /**
     * A dimensionless number that shows how similar the compared faces are. 0—absolutely identical faces.
     * @type {number}
     * @memberof MatchImageResult
     */
    'score'?: number;
    /**
     * The detected faces similarity, %. 100%—absolutely identical faces, 0%—absolutely not identical.
     * @type {number}
     * @memberof MatchImageResult
     */
    'similarity'?: number;
}
/**
 *
 * @export
 * @interface MatchAndSearchResponseAllOf
 */
export interface MatchAndSearchResponseAllOf {
    /**
     *
     * @type {Array<MatchImageResult>}
     * @memberof MatchAndSearchResponseAllOf
     */
    'results'?: Array<MatchImageResult>;
    /**
     *
     * @type {number}
     * @memberof MatchAndSearchResponseAllOf
     */
    'elapsedTime'?: number;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof MatchAndSearchResponseAllOf
     */
    'metadata'?: {
        [key: string]: object;
    };
    /**
     *
     * @type {Array<MatchAndSearchResponseAllOfDetections>}
     * @memberof MatchAndSearchResponseAllOf
     */
    'detections'?: Array<MatchAndSearchResponseAllOfDetections>;
}
/**
 * @type MatchAndSearchResponse
 * @export
 */
export type MatchAndSearchResponse = FaceSDKResult & MatchAndSearchResponseAllOf;
/**
 *
 * @export
 * @interface MatchImage
 */
export interface MatchImage {
    /**
     * The image index number. Can be given; if not given, the index numbers are set automatically starting from 0. All index numbers must be whole and unique—not repeated.
     * @type {number}
     * @memberof MatchImage
     */
    'index'?: number;
    /**
     *
     * @type {ImageSource}
     * @memberof MatchImage
     */
    'type'?: ImageSource;
    /**
     *
     * @type {ImageData}
     * @memberof MatchImage
     */
    'data': ImageData;
    /**
     * Whether to detect all faces in the image. If set to false, only the most central face is detected.
     * @type {boolean}
     * @memberof MatchImage
     */
    'detectAll'?: boolean;
}
/**
 *
 * @export
 * @interface MatchImageDetection
 */
export interface MatchImageDetection {
    /**
     * The array of detected faces.
     * @type {Array<DetectionFace>}
     * @memberof MatchImageDetection
     */
    'faces'?: Array<DetectionFace>;
    /**
     * The image index number. Can be given; if not given, the index numbers are set automatically starting from 0. All index numbers must be whole and unique—not repeated.
     * @type {number}
     * @memberof MatchImageDetection
     */
    'imageIndex': number;
    /**
     *
     * @type {FaceSDKResultCode}
     * @memberof MatchImageDetection
     */
    'status': FaceSDKResultCode;
}
/**
 *
 * @export
 * @interface MatchRequest
 */
export interface MatchRequest {
    /**
     * Session identificator.
     * @type {string}
     * @memberof MatchRequest
     */
    'tag'?: string;
    /**
     * Whether to return thumbnails: Base64 cropped images that contain vertically aligned faces.
     * @type {boolean}
     * @memberof MatchRequest
     */
    'thumbnails'?: boolean;
    /**
     * The array of all images included in the comparison.
     * @type {Array<MatchImage>}
     * @memberof MatchRequest
     */
    'images': Array<MatchImage>;
}
/**
 *
 * @export
 * @interface MatchResponseAllOf
 */
export interface MatchResponseAllOf {
    /**
     * The array of detected faces.
     * @type {Array<MatchImageDetection>}
     * @memberof MatchResponseAllOf
     */
    'detections'?: Array<MatchImageDetection>;
    /**
     * The array of matching results.
     * @type {Array<MatchImageResult>}
     * @memberof MatchResponseAllOf
     */
    'results'?: Array<MatchImageResult>;
}
/**
 * @type MatchResponse
 * @export
 */
export type MatchResponse = FaceSDKResult & MatchResponseAllOf;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface OperationLog
 */
export interface OperationLog {
    /**
     * Status code.
     * @type {number}
     * @memberof OperationLog
     */
    'statusCode'?: number;
    /**
     * Error type.
     * @type {string}
     * @memberof OperationLog
     */
    'type'?: string;
    /**
     * Error message.
     * @type {string}
     * @memberof OperationLog
     */
    'msg'?: string;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The array of identified persons.
 * @export
 * @interface SearchDetection
 */
export interface SearchDetection {
    /**
     * Internal.
     * @type {number}
     * @memberof SearchDetection
     */
    'code'?: number;
    /**
     * Base64 of the aligned and cropped portrait.
     * @type {string}
     * @memberof SearchDetection
     */
    'crop'?: string;
    /**
     * Internal.
     * @type {number}
     * @memberof SearchDetection
     */
    'detectorType'?: number;
    /**
     * Internal.
     * @type {string}
     * @memberof SearchDetection
     */
    'hash'?: string;
    /**
     * Internal.
     * @type {number}
     * @memberof SearchDetection
     */
    'idx'?: number;
    /**
     * Internal.
     * @type {string}
     * @memberof SearchDetection
     */
    'image'?: string;
    /**
     * Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.
     * @type {Array<Array<number>>}
     * @memberof SearchDetection
     */
    'landmarks'?: Array<Array<number>>;
    /**
     * Internal.
     * @type {number}
     * @memberof SearchDetection
     */
    'landmarksType'?: number;
    /**
     * Internal.
     * @type {string}
     * @memberof SearchDetection
     */
    'msg'?: string;
    /**
     * The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.
     * @type {Array<number>}
     * @memberof SearchDetection
     */
    'roi'?: Array<number>;
    /**
     *
     * @type {string}
     * @memberof SearchDetection
     */
    'versionSDK'?: string;
}
/**
 * Person data.
 * @export
 * @interface SearchPersonAllOf
 */
export interface SearchPersonAllOf {
    /**
     *
     * @type {SearchDetection}
     * @memberof SearchPersonAllOf
     */
    'detection'?: SearchDetection;
    /**
     * Array of Person images.
     * @type {Array<RecognizeImage>}
     * @memberof SearchPersonAllOf
     */
    'images'?: Array<RecognizeImage>;
}
/**
 * @type SearchPerson
 * @export
 */
export type SearchPerson = Person & SearchPersonAllOf;
/**
 *
 * @export
 * @interface PersonCreatedResponse
 */
export interface PersonCreatedResponse {
    /**
     * Result code.
     * @type {number}
     * @memberof PersonCreatedResponse
     */
    'code'?: number;
    /**
     * Array of Person images.
     * @type {Array<SearchPerson>}
     * @memberof PersonCreatedResponse
     */
    'persons'?: Array<SearchPerson>;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof PersonCreatedResponse
     */
    'metadata'?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface PersonsPageAllOf
 */
export interface PersonsPageAllOf {
    /**
     *
     * @type {Array<Person>}
     * @memberof PersonsPageAllOf
     */
    'items'?: Array<Person>;
}
/**
 * @type PersonsPage
 * @export
 */
export type PersonsPage = Page & PersonsPageAllOf;
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface SearchBadParams
 */
export interface SearchBadParams {
    /**
     *
     * @type {string}
     * @memberof SearchBadParams
     */
    'msg'?: string;
    /**
     *
     * @type {number}
     * @memberof SearchBadParams
     */
    'statusCode'?: number;
    /**
     *
     * @type {string}
     * @memberof SearchBadParams
     */
    'type'?: string;
}
/**
 * @type SearchRequest
 * @export
 */
export type SearchRequest = ImageFields & SearchParameters;
/**
 *
 * @export
 * @interface SearchResult
 */
export interface SearchResult {
    /**
     * Search result code.
     * @type {number}
     * @memberof SearchResult
     */
    'code'?: number;
    /**
     * Person data.
     * @type {Array<SearchPerson>}
     * @memberof SearchResult
     */
    'persons'?: Array<SearchPerson>;
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TransactionInfo
 */
export interface TransactionInfo {
    /**
     * Result code, one of the FaceSDKResultCode enum values. See the enum: https://docs.regulaforensics.com/develop/face-sdk/web-service/development/enums/face-sdk-result-code/
     * @type {number}
     * @memberof TransactionInfo
     */
    'code'?: number;
    /**
     * Whether the liveness detection is confirmed (0) or not (1).
     * @type {number}
     * @memberof TransactionInfo
     */
    'status'?: number;
    /**
     * Session identificator.
     * @type {string}
     * @memberof TransactionInfo
     */
    'tag'?: string;
    /**
     * Transaction ID, there can be several transactions within one session.
     * @type {string}
     * @memberof TransactionInfo
     */
    'transactionId'?: string;
    /**
     * Link to the session video.
     * @type {string}
     * @memberof TransactionInfo
     */
    'video'?: string;
    /**
     * List of base64 images
     * @type {Array<string>}
     * @memberof TransactionInfo
     */
    'images'?: Array<string>;
    /**
     * Approximate age with an accuracy of +/-3 years.
     * @type {number}
     * @memberof TransactionInfo
     */
    'estimatedAge'?: number;
    /**
     * Link to the portrait.
     * @type {string}
     * @memberof TransactionInfo
     */
    'portrait'?: string;
    /**
     * A free-form object containing person\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof TransactionInfo
     */
    'metadata'?: {
        [key: string]: object;
    };
}
/**
 * Regula FaceSDK Web API
 * Regula FaceSDK Web API # Clients * [JavaScript](https://github.com/regulaforensics/FaceSDK-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/FaceSDK-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/FaceSDK-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/FaceSDK-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 5.2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Update group.
 * @export
 * @interface UpdateGroup
 */
export interface UpdateGroup {
    /**
     * Add items.
     * @type {Array<string>}
     * @memberof UpdateGroup
     */
    'addItems'?: Array<string>;
    /**
     * Remove items.
     * @type {Array<string>}
     * @memberof UpdateGroup
     */
    'removeItems'?: Array<string>;
}
type TDetection = {
    /**
     *
     * @type {ImageData}
     * @memberof Detection
     */
    'crop'?: ImageData;
    /**
     *
     * @memberof Detection
     */
    'attributes'?: {
        /**
         *
         * @type {Array<{ name?: string; confidence?: number; value?: any; }>}
         */
        'details'?: {
            name?: string;
            confidence?: number;
            value?: any;
        }[];
        /**
         * The elapsed time for attribute detection.
         * @type {number}
         */
        'elapsedTime'?: number;
    };
    /**
     * Absolute coordinates (x,y) of five points of each detected face: left eye, right eye, nose, left point of lips, right point of lips.
     * @type {Array<Array<number>>}
     * @memberof Detection
     */
    'landmarks': Array<Array<number>>;
    /**
     *
     * @type {DetectionQuality}
     * @memberof Detection
     */
    'quality'?: DetectionQuality;
    /**
     * The rectangular area of a detected face that is represented by a set of four elements: the X and Y coordinates of the top-left point, and the width and height dimensions of the rectangle.
     * @type {Array<number>}
     * @memberof Detection
     */
    'roi': Array<number>;
    /**
     * Base64 of the cropped portrait.
     * @type {string}
     * @memberof Detection
     */
    'thumbnail'?: string;
};
type TDetectResponse = {
    results?: {
        /**
         *
         * @type {Array<Detection>}
         * @memberof DetectResult
         */
        'detections': Array<TDetection>;
        /**
         * Internal.
         * @type {number}
         * @memberof DetectResult
         */
        'detectorType'?: number;
        /**
         * Internal.
         * @type {number}
         * @memberof DetectResult
         */
        'landmarksType'?: number;
        /**
         *
         * @type {FaceQualityScenarios}
         * @memberof DetectResult
         */
        'scenario'?: FaceQualityScenarios;
        /**
         * The total time taken for the detection.
         * @type {number}
         * @memberof DetectResult
         */
        'timer'?: number;
    };
} & FaceSDKResult;
declare class MatchingApi {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    match(compareRequest: MatchRequest, xRequestID: string, options?: AxiosRequestConfig): Promise<MatchResponse>;
    detect(detectRequest: DetectRequest, xRequestID?: string, options?: AxiosRequestConfig): Promise<TDetectResponse>;
}
declare class GroupApi {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    createGroup(groupToCreate: GroupToCreate, xRequestID?: string, options?: AxiosRequestConfig): Promise<Group>;
    deleteGroup(groupId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
    getAllGroups(page: number, size: number, xRequestID?: string, options?: AxiosRequestConfig): Promise<GroupPage>;
    getAllPersonsByGroupId(page: number, size: number, groupId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<PersonsPage>;
    getGroup(groupId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<Group>;
    updateGroup(groupId: string, groupToCreate: GroupToCreate, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
    updatePersonsInGroup(groupId: string, updateGroup: UpdateGroup, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
}
declare class PersonApi {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    createPerson(personFields: PersonFields, xRequestID?: string, options?: AxiosRequestConfig): Promise<Person>;
    addImageToPerson(personId: string, imageFields: ImageFields, xRequestID?: string, options?: AxiosRequestConfig): Promise<Image>;
    deleteImageOfPerson(imageId: string, personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
    deletePerson(personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
    getAllGroupsByPersonId(page: number, size: number, personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<GroupPage>;
    getAllImagesByPersonId(page: number, size: number, personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<ImagePage>;
    getImageOfPerson(imageId: string, personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<unknown>;
    getPerson(personId: string, xRequestID?: string, options?: AxiosRequestConfig): Promise<Person>;
    updatePerson(personId: string, personFields: PersonFields, xRequestID?: string, options?: AxiosRequestConfig): Promise<void>;
}
declare class SearchApi {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    search(searchRequest: SearchRequest, xRequestID?: string, options?: AxiosRequestConfig): Promise<SearchResult>;
}
declare class DiagnosticsApi {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    readiness(xRequestID?: string, options?: AxiosRequestConfig): Promise<Record<string, unknown>>;
}
declare class Liveness20Api {
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
    getLivenessTransactionInfo(transactionId: string, options?: AxiosRequestConfig): Promise<TransactionInfo>;
}
export class FaceSdk {
    protected basePath: string;
    protected axios: AxiosInstance;
    matchingApi: MatchingApi;
    groupApi: GroupApi;
    personApi: PersonApi;
    searchApi: SearchApi;
    diagnosticsApi: DiagnosticsApi;
    livenessApi: Liveness20Api;
    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);
}
